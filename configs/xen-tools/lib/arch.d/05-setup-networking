#!/bin/sh
#
#  This script sets up the /etc/network/interface file for the new
# image.
#
# Steve
# --
# http://www.steve.org.uk/


prefix=$1

#
#  Source our common functions
#
if [ -e /usr/lib/xen-tools/common.sh ]; then
    . /usr/lib/xen-tools/common.sh
else
    . ./hooks/common.sh
fi


#
# Log our start
#
logMessage Script $0 starting

#
#  A function to setup static IP addresses for our new image.
#
setupStaticNetworking ()
{
    #
    # We have a static IP address
    #

    sed -i "s/173.244.165.28/${ip1}/g" ${prefix}/etc/rc.conf
    sed -i "s/173.244.165.17/${gateway}/g" ${prefix}/etc/rc.conf
    sed -i "s/255.255.255.240/${netmask}/g" ${prefix}/etc/rc.conf

#    interface=1
#    count=2

#    while [ "${count}" -le "${ip_count}" ]; do

#        value=\$ip${count}
#        value=`eval echo $value`

#        logMessage Adding etho:${interface}

#        cat <<E_O_STATIC >>${prefix}/etc/network/interfaces
#auto eth0:${interface}
#iface eth0:${interface} inet static
# address ${value}
# netmask ${netmask}
 # post-up  ethtool -K eth0 tx off
#E_O_STATIC
#        count=`expr $count + 1`
#        interface=`expr $interface + 1`
#    done

    #
    # Hooks are run chrooted, hence the resolv.conf is moved
    # temporarily to /etc/resolv.conf.old. Use that file, it
    # will be restored after hooks are run.
    #
    if [ '' != "$nameserver" ]; then
        rm -f ${prefix}/etc/resolv.conf.old
        for ns in $nameserver; do
            echo "nameserver $ns" >>${prefix}/etc/resolv.conf.old
        done
    else
        cp /etc/resolv.conf ${prefix}/etc/resolv.conf.old
    fi
}




#
#  Call the relevant function
#
if [ -z "${dhcp}" ]; then
    logMessage "Setting up static networking"
    setupStaticNetworking
fi


#
#  Log our finish
#
logMessage Script $0 finished
